/* STM inbuilt library */
#include "stm32f4xx_hal.h"

/* User libraries */
#include <adc.h>


/* glibc libraries */
#include <stdint.h>

void Init_OnBoard_LEDs(void);
void configure_DAC(void);
void configure_GPIO(void);
void Delay_ms(volatile int time_ms);

DAC_HandleTypeDef DAC_Config;
int main() {
        double voltage;
        
	Init_OnBoard_LEDs();
        configure_DAC(); // call DAC initialization and configuration routine
        configure_GPIO(); // call GPIO PA5 initialization and configuration routine

        //ADC for resistor calcs
        struct mADC* adc1 = mADC_Init( 1 );
        HAL_DAC_Start( &DAC_Config, DAC_CHANNEL_2 );
        HAL_GPIO_TogglePin( GPIOD, GPIO_PIN_12 );
	while( 1 )
	{
	        voltage = mADC_GetVoltage( adc1 );
                HAL_DAC_SetValue(&DAC_Config, DAC_CHANNEL_2, DAC_ALIGN_12B_R, voltage);
                Delay_ms(100);
	}

        mADC_Free( adc1 );
        
}

void Init_OnBoard_LEDs() {
	__HAL_RCC_GPIOD_CLK_ENABLE();
	GPIO_InitTypeDef BoardLEDs;
	BoardLEDs.Mode = GPIO_MODE_OUTPUT_PP;
	BoardLEDs.Pin = GPIO_PIN_12|GPIO_PIN_13|GPIO_PIN_14|GPIO_PIN_15;
	HAL_GPIO_Init(GPIOD, &BoardLEDs);
}

/* Initialize and configure DAC_Channel_2 */
void configure_DAC(void)
{
 DAC_ChannelConfTypeDef Channel_Config;
 __HAL_RCC_DAC_CLK_ENABLE();
 /* DAC Initialization */
 DAC_Config.Instance = DAC;
 HAL_DAC_Init(&DAC_Config);

 /* DAC channel_OUT2 config */
 Channel_Config.DAC_Trigger = DAC_TRIGGER_NONE;
 Channel_Config.DAC_OutputBuffer = DAC_OUTPUTBUFFER_ENABLE;
 HAL_DAC_ConfigChannel(&DAC_Config, &Channel_Config, DAC_CHANNEL_2);
}
/* Initialize and configure GPIO PA4 as a analog pin */
void configure_GPIO(void)
{

/* DAC GPIO ---> PA5 */
 GPIO_InitTypeDef GPIO_InitStruct;
 GPIO_InitStruct.Pin = GPIO_PIN_5;
 GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 GPIO_InitStruct.Pull = GPIO_NOPULL;
 HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
}

void Delay_ms(volatile int time_ms) {
	int j;
    for (j = 0; j < time_ms*4000; j++)
        {}  /* excute NOP for 1ms */
}
